(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["grid"],{"03b1":function(e,o,d){"use strict";d.r(o);var c=function(){var e=this,o=e.$createElement,d=e._self._c||o;return d("div",[d("h1",[e._v(e._s(e.Grid))]),d("p",[e._v("24 栅格系统。")]),d("h2",[e._v("概述")]),d("p",[e._v("布局的栅格化系统，我们是基于行（row）和列（col）来定义信息区块的外部框架，以保证页面的每个区域能够稳健地排布起来。下面简单介绍一下它的工作原理：")]),e._m(0),d("h2",[e._v("代码演示")]),d("WRow",{attrs:{gutter:16}},[d("WCol",{attrs:{span:24}},[d("WDemo",{attrs:{code:e.base.code,render:e.base.render,title:e.base.title,desc:e.base.desc}}),d("WDemo",{attrs:{code:e.gutter.code,render:e.gutter.render,title:e.gutter.title,desc:e.gutter.desc}}),d("WDemo",{attrs:{code:e.offset.code,render:e.offset.render,title:e.offset.title,desc:e.offset.desc}}),d("WDemo",{attrs:{code:e.sort.code,render:e.sort.render,title:e.sort.title,desc:e.sort.desc}}),d("WDemo",{attrs:{code:e.justify.code,render:e.justify.render,title:e.justify.title,desc:e.justify.desc}}),d("WDemo",{attrs:{code:e.align.code,render:e.align.render,title:e.align.title,desc:e.align.desc}}),d("WDemo",{attrs:{code:e.order.code,render:e.order.render,title:e.order.title,desc:e.order.desc}}),d("WDemo",{attrs:{code:e.media.code,render:e.media.render,title:e.media.title,desc:e.media.desc}})],1)],1),d("h2",[e._v("Row API")]),d("ApiTable",{attrs:{data:e.rowProps}}),d("h2",[e._v("Col API")]),d("ApiTable",{attrs:{data:e.colProps}})],1)},r=[function(){var e=this,o=e.$createElement,d=e._self._c||o;return d("ul",[d("li",[e._v("通过 "),d("code",[e._v("row")]),e._v(" 在水平方向建立一组 "),d("code",[e._v("column")]),e._v("（简写 col）")]),d("li",[e._v("你的内容应当放置于 "),d("code",[e._v("col")]),e._v(" 内，并且，只有 "),d("code",[e._v("col")]),e._v(" 可以作为 "),d("code",[e._v("row")]),e._v(" 的直接元素")]),d("li",[e._v("栅格系统中的列是指 1 到 24 的值来表示其跨越的范围。例如，三个等宽的列可以使用 "),d("code",[e._v(".col-8")]),e._v(" 来创建")]),d("li",[e._v("如果一个 "),d("code",[e._v("row")]),e._v(" 中的col总和超过 24，那么多余的 "),d("code",[e._v("col")]),e._v(" 会作为一个整体另起一行排列")])])}],s=d("d225"),t=d("308d"),l=d("6bb5"),a=d("4e2b"),n=d("9ab4"),i=d("60a3"),p=d("7712"),u=d("fdbe"),m=d("3104"),w=d("1980"),v={title:"基本使用",desc:"从堆叠到水平排列。\n使用单一的一组 <code>Row</code> 和 <code>Col</code> 栅格组件，就可以创建一个基本的栅格系统，所有列（Col）必须放在 Row 内。",code:'<w-row>\n  <w-col :span="12">col-12</w-col>\n  <w-col :span="12">col-12</w-col>\n</w-row>',render:function(e){return e("section",{class:"demo-demo"},[e(u["a"],{props:{className:"demo-grid-row"}},[e(m["a"],{props:{span:12,className:["demo-grid-col","demo-grid-text"]}},"col-12"),e(m["a"],{props:{span:12,className:["demo-grid-col","demo-grid-text"]}},"col-12")])])}},f=v,g={title:"区块间隔",desc:"从堆叠到水平排列。\n使用单一的一组 <code>Row</code> 和 <code>Col</code> 栅格组件，就可以创建一个基本的栅格系统，所有列（Col）必须放在 Row 内。",code:'<w-row :gutter="16">\n  <w-col :span="12">\n    <div>col-12</div>\n  </w-col>\n  <w-col :span="12">\n    <div>col-12</div>\n  </w-col>\n</w-row>',render:function(e){return e("section",{class:"demo-demo"},[e(u["a"],{props:{gutter:16}},[e(m["a"],{props:{span:12}},[e("div",{class:"demo-grid-box"},"col-12")]),e(m["a"],{props:{span:12}},[e("div",{class:"demo-grid-box"},"col-12")])])])}},b=g,x={title:"左右偏移",desc:'使用 <code>offset</code> 可以将列向右侧偏。例如，<code>:offset="4"</code> 将元素向右侧偏移了 4 个列（column）的宽度。',code:'<w-row>\n  <w-col :span="12">\n    <div>col-12</div>\n  </w-col>\n  <w-col :span="12" :offset="8">\n    <div>col-12</div>\n  </w-col>\n</w-row>',render:function(e){return e("section",{class:"demo-demo"},[e(u["a"],{},[e(m["a"],{props:{span:8}},[e("div",{class:"demo-grid-box"},"col-8")]),e(m["a"],{props:{span:8,offset:8}},[e("div",{class:"demo-grid-box"},"col-8")])])])}},y=x,_={title:"左右偏移",desc:'使用 <code>offset</code> 可以将列向右侧偏。例如，<code>:offset="4"</code> 将元素向右侧偏移了 4 个列（column）的宽度。',code:'<w-row>\n  <w-col :span="18" :push="6">\n    <div>col-18 col-push-6</div>\n  </w-col>\n  <w-col :span="6" :pull="18">\n    <div>col-6 col-pull-18</div>\n  </w-col>\n</w-row>',render:function(e){return e("section",{class:"demo-demo"},[e(u["a"],{},[e(m["a"],{props:{span:18,push:6}},[e("div",{class:"demo-grid-box"},"col-18 col-push-6")]),e(m["a"],{props:{span:6,pull:18}},[e("div",{class:"demo-grid-box"},"col-6 col-pull-18")])])])}},h=_,q={title:"左右对齐",desc:"使用 <code>justify</code> 可以设置列的对齐方式。",code:'<w-row justify="end">\n  <w-col :span="4">\n    <div>col-4</div>\n  </w-col>\n  <w-col :span="4">\n    <div>col-4</div>\n  </w-col>\n</w-row>',render:function(e){return e("section",{class:"demo-demo"},[e(u["a"],{props:{justify:"end"}},[e(m["a"],{props:{span:4}},[e("div",{class:"demo-grid-box"},"col-4")]),e(m["a"],{props:{span:4}},[e("div",{class:"demo-grid-box"},"col-4")])])])}},N=q,j={title:"上下对齐",desc:"使用 <code>align</code> 可以设置列的对齐方式。",code:'<w-row align="middle">\n  <w-col :span="12">\n    <div>col-12</div>\n  </w-col>\n  <w-col :span="12">\n    <div>col-12</div>\n  </w-col>\n</w-row>',render:function(e){return e("section",{class:"demo-demo"},[e(u["a"],{props:{align:"middle"}},[e(m["a"],{props:{span:12}},[e("div",{class:"demo-grid-box"},"col-12")]),e(m["a"],{props:{span:12}},[e("div",{class:"demo-grid-box",style:{height:"100px",lineHeight:"100px"}},"col-12")])])])}},W=j,D={title:"左右对齐",desc:"使用 <code>justify</code> 可以设置列的对齐方式。",code:'<w-row>\n  <w-col :span="6" :order="4">\n    <div>1 col-order-4</div>\n  </w-col>\n  <w-col :span="6" :order="3">\n    <div>2 col-order-3</div>\n  </w-col>\n  <w-col :span="6" :order="2">\n    <div>3 col-order-2</div>\n  </w-col>\n  <w-col :span="6" :order="1">\n    <div>4 col-order-1</div>\n  </w-col>\n</w-row>',render:function(e){return e("section",{class:"demo-demo"},[e(u["a"],[e(m["a"],{props:{span:6,order:4}},[e("div",{class:"demo-grid-box"},"1 col-order-4")]),e(m["a"],{props:{span:6,order:3}},[e("div",{class:"demo-grid-box"},"2 col-order-3")]),e(m["a"],{props:{span:6,order:2}},[e("div",{class:"demo-grid-box"},"3 col-order-2")]),e(m["a"],{props:{span:6,order:1}},[e("div",{class:"demo-grid-box"},"4 col-order-1")])])])}},O=D,A="http://getbootstrap.com/css/#grid-media-queries",C={title:"响应式布局",desc:'参照 Bootstrap 的 <a href="'.concat(A,'" class="link">响应式设计</a>，预设六个响应尺寸： <code>xs</code> <code>sm</code> <code>md</code> <code>lg</code> <code>xl</code> <code>xxl</code> 。'),code:'<w-row>\n  <w-col :xs="2" :sm="4" :md="6" :lg="8" :xl="10">\n    <div>col</div>\n  </w-col>\n  <w-col:xs="20" :sm="16" :md="12" :lg="8" :xl="4">\n    <div>col</div>\n  </w-col>\n  <w-col :xs="2" :sm="4" :md="6" :lg="8" :xl="10">\n    <div>col</div>\n  </w-col>\n</w-row>',render:function(e){return e("section",{class:"demo-demo"},[e(u["a"],{},[e(m["a"],{props:{xs:2,sm:4,md:6,lg:8,xl:10}},[e("div",{class:"demo-grid-box"},"col")]),e(m["a"],{props:{xs:20,sm:16,md:12,lg:8,xl:4}},[e("div",{class:"demo-grid-box2"},"col")]),e(m["a"],{props:{xs:2,sm:4,md:6,lg:8,xl:10}},[e("div",{class:"demo-grid-box"},"col")])])])}},R=C,P=[{param:"tag",desc:"row 实际渲染的标签",type:"String",require:"否",default:"div"},{param:"className",desc:"自定义最外层的 class",type:"String | Object | Array",require:"否",default:"无"},{param:"align",desc:"flex 布局下的垂直对齐方式： <code>top</code> <code>middle</code> <code>bottom</code>",type:"String",require:"否",default:"无"},{param:"justify",desc:"flex 布局下的水平排列方式： <code>start</code> <code>end</code> <code>center</code> <code>space-around</code> <code>space-between</code>",type:"String",require:"否",default:"无"},{param:"basin",desc:"栅格上下间隔",type:"Number",require:"否",default:"无"},{param:"gutter",desc:"栅格左右间隔",type:"Number",require:"否",default:"无"},{param:"type",desc:"栅格布局类型，可选值： <code>float</code>或者不设，默认 <code>flex</code> 布局",type:"Number",require:"否",default:"无"}],S=[{param:"tag",desc:"col 实际渲染的标签",type:"String",require:"否",default:"div"},{param:"className",desc:"自定义最外层的 class",type:"String | Object | Array",require:"否",default:"无"},{param:"span",desc:"栅格占位格数，为 0 时相当于 <code>display: none</code>",type:"Number",require:"否",default:"无"},{param:"order",desc:"栅格顺序， <code>flex</code> 布局模式下有效",type:"Number",require:"否",default:"无"},{param:"offset",desc:"栅格左侧的间隔格数，间隔内不可以有栅格",type:"Number",require:"否",default:"无"},{param:"pull",desc:"栅格向左移动格数",type:"Number",require:"否",default:"无"},{param:"push",desc:"栅格向右移动格数",type:"Number",require:"否",default:"无"},{param:"xs",desc:"<code><576px</code> 响应式栅格，可为栅格数",type:"Number",require:"否",default:"无"},{param:"sm",desc:"<code>>=576px</code> 响应式栅格，可为栅格数",type:"Number",require:"否",default:"无"},{param:"md",desc:"<code>>=768px</code> 响应式栅格，可为栅格数",type:"Number",require:"否",default:"无"},{param:"lg",desc:"<code>>=992px</code> 响应式栅格，可为栅格数",type:"Number",require:"否",default:"无"},{param:"xl",desc:"<code>>=1200px</code> 响应式栅格，可为栅格数",type:"Number",require:"否",default:"无"},{param:"xxl",desc:"<code>>=1600px</code> 响应式栅格，可为栅格数",type:"Number",require:"否",default:"无"}],k=d("421e"),G=function(e){function o(){var e;return Object(s["a"])(this,o),e=Object(t["a"])(this,Object(l["a"])(o).apply(this,arguments)),e.Grid=k["c"].Grid,e.base=f,e.gutter=b,e.offset=y,e.sort=h,e.justify=N,e.align=W,e.order=O,e.media=R,e.rowProps=P,e.colProps=S,e}return Object(a["a"])(o,e),o}(i["g"]);G=n["a"]([Object(i["a"])({components:{ApiTable:p["a"],WRow:u["a"],WCol:m["a"],WDemo:w["a"]}})],G);var T=G,E=T,I=(d("5cfe"),d("2877")),J=Object(I["a"])(E,c,r,!1,null,null,null);o["default"]=J.exports},"5cfe":function(e,o,d){"use strict";var c=d("edcd"),r=d.n(c);r.a},edcd:function(e,o,d){}}]);